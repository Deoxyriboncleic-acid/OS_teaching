
complier-opt.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <spin_1>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   f:	eb 04                	jmp    15 <spin_1+0x15>
  11:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  15:	83 7d fc 63          	cmpl   $0x63,-0x4(%rbp)
  19:	7e f6                	jle    11 <spin_1+0x11>
  1b:	90                   	nop
  1c:	90                   	nop
  1d:	5d                   	pop    %rbp
  1e:	c3                   	retq   

000000000000001f <spin_2>:
  1f:	f3 0f 1e fa          	endbr64 
  23:	55                   	push   %rbp
  24:	48 89 e5             	mov    %rsp,%rbp
  27:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  2e:	eb 09                	jmp    39 <spin_2+0x1a>
  30:	8b 45 fc             	mov    -0x4(%rbp),%eax
  33:	83 c0 01             	add    $0x1,%eax
  36:	89 45 fc             	mov    %eax,-0x4(%rbp)
  39:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3c:	83 f8 63             	cmp    $0x63,%eax
  3f:	7e ef                	jle    30 <spin_2+0x11>
  41:	90                   	nop
  42:	90                   	nop
  43:	5d                   	pop    %rbp
  44:	c3                   	retq   

0000000000000045 <return_1>:
  45:	f3 0f 1e fa          	endbr64 
  49:	55                   	push   %rbp
  4a:	48 89 e5             	mov    %rsp,%rbp
  4d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  54:	eb 0c                	jmp    62 <return_1+0x1d>
  56:	b8 01 00 00 00       	mov    $0x1,%eax
  5b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  5e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  62:	83 7d fc 63          	cmpl   $0x63,-0x4(%rbp)
  66:	7e ee                	jle    56 <return_1+0x11>
  68:	8b 45 f8             	mov    -0x8(%rbp),%eax
  6b:	5d                   	pop    %rbp
  6c:	c3                   	retq   

000000000000006d <return_1_volatile>:
  6d:	f3 0f 1e fa          	endbr64 
  71:	55                   	push   %rbp
  72:	48 89 e5             	mov    %rsp,%rbp
  75:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  7c:	eb 0c                	jmp    8a <return_1_volatile+0x1d>
  7e:	b8 01 00 00 00       	mov    $0x1,%eax
  83:	89 45 f8             	mov    %eax,-0x8(%rbp)
  86:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  8a:	83 7d fc 63          	cmpl   $0x63,-0x4(%rbp)
  8e:	7e ee                	jle    7e <return_1_volatile+0x11>
  90:	8b 45 f8             	mov    -0x8(%rbp),%eax
  93:	5d                   	pop    %rbp
  94:	c3                   	retq   

0000000000000095 <foo>:
  95:	f3 0f 1e fa          	endbr64 
  99:	55                   	push   %rbp
  9a:	48 89 e5             	mov    %rsp,%rbp
  9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  af:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  b9:	8b 00                	mov    (%rax),%eax
  bb:	5d                   	pop    %rbp
  bc:	c3                   	retq   

00000000000000bd <foo_func_call>:
  bd:	f3 0f 1e fa          	endbr64 
  c1:	55                   	push   %rbp
  c2:	48 89 e5             	mov    %rsp,%rbp
  c5:	48 83 ec 10          	sub    $0x10,%rsp
  c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  d1:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  d7:	b8 00 00 00 00       	mov    $0x0,%eax
  dc:	e8 00 00 00 00       	callq  e1 <foo_func_call+0x24>
  e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  e5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ef:	8b 00                	mov    (%rax),%eax
  f1:	c9                   	leaveq 
  f2:	c3                   	retq   

00000000000000f3 <foo_volatile>:
  f3:	f3 0f 1e fa          	endbr64 
  f7:	55                   	push   %rbp
  f8:	48 89 e5             	mov    %rsp,%rbp
  fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 103:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 10d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 117:	8b 00                	mov    (%rax),%eax
 119:	5d                   	pop    %rbp
 11a:	c3                   	retq   

000000000000011b <foo_volatile2>:
 11b:	f3 0f 1e fa          	endbr64 
 11f:	55                   	push   %rbp
 120:	48 89 e5             	mov    %rsp,%rbp
 123:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 12b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 135:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 13f:	8b 00                	mov    (%rax),%eax
 141:	5d                   	pop    %rbp
 142:	c3                   	retq   

0000000000000143 <foo_barrier>:
 143:	f3 0f 1e fa          	endbr64 
 147:	55                   	push   %rbp
 148:	48 89 e5             	mov    %rsp,%rbp
 14b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 153:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 15d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 167:	8b 00                	mov    (%rax),%eax
 169:	5d                   	pop    %rbp
 16a:	c3                   	retq   
